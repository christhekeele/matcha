name: Test Edge
on:
  workflow_dispatch: {}

  schedule:
    - cron: 0 0 * * *

env:
  edge-elixir: "master"
  edge-otp: "x"
  cache-version: 1
  MIX_ENV: test

concurrency:
  group: test-edge-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    name: Testing Edge
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Unlock dependencies
        run: rm -f mix.lock

      - name: Install erlang & Elixir
        id: beam-versions
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.edge-elixir }}
          otp-version: ${{ env.edge-otp }}

      - name: Restore mix dependency installation cache
        id: mix-deps-get-cache
        uses: actions/cache@v2
        with:
          path: deps
          key: cache-${{ env.cache-version }}-os-${{ runner.os }}-otp-${{ steps.beam-versions.outputs.otp-versions }}-elixir-${{ steps.beam-versions.outputs.elixir-versions }}-mix-deps-get-mix-lock-file-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Install mix dependencies
        if: steps.mix-deps-get-cache.outputs.cache-hit != 'true'
        run: mix deps.get

      - name: Restore mix dependency compilation cache
        id: mix-deps-compile-cache
        uses: actions/cache@v2
        with:
          path: _build
          key: cache-${{ env.cache-version }}-os-${{ runner.os }}-otp-${{ steps.beam-versions.outputs.otp-versions }}-elixir-${{ steps.beam-versions.outputs.elixir-versions }}-mix-deps-compile-mix-lock-file-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Compile mix dependencies
        if: steps.mix-deps-compile-cache.outputs.cache-hit != 'true'
        run: mix deps.compile

      - name: Run test suite
        run: mix test

  lints:
    name: Linting Edge
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Unlock dependencies
        run: rm -f mix.lock

      - name: Install erlang & Elixir
        id: beam-versions
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.edge-elixir }}
          otp-version: ${{ env.edge-otp }}

      - name: Restore mix dependency installation cache
        id: mix-deps-get-cache
        uses: actions/cache@v2
        with:
          path: deps
          key: cache-${{ env.cache-version }}-os-${{ runner.os }}-otp-${{ steps.beam-versions.outputs.otp-versions }}-elixir-${{ steps.beam-versions.outputs.elixir-versions }}-mix-deps-get-mix-lock-file-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Install mix dependencies
        if: steps.mix-deps-get-cache.outputs.cache-hit != 'true'
        run: mix deps.get

      - name: Restore mix dependency compilation cache
        id: mix-deps-compile-cache
        uses: actions/cache@v2
        with:
          path: _build
          key: cache-${{ env.cache-version }}-os-${{ runner.os }}-otp-${{ steps.beam-versions.outputs.otp-versions }}-elixir-${{ steps.beam-versions.outputs.elixir-versions }}-mix-deps-compile-mix-lock-file-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Compile mix dependencies
        if: steps.mix-deps-compile-cache.outputs.cache-hit != 'true'
        run: mix deps.compile

      - name: Run linter tasks
        run: mix lint

  types:
    name: Typechecking Edge
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Unlock dependencies
        run: rm -f mix.lock

      - name: Install erlang & Elixir
        id: beam-versions
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.edge-elixir }}
          otp-version: ${{ env.edge-otp }}

      - name: Restore mix dependency installation cache
        id: mix-deps-get-cache
        uses: actions/cache@v2
        with:
          path: deps
          key: cache-${{ env.cache-version }}-os-${{ runner.os }}-otp-${{ steps.beam-versions.outputs.otp-versions }}-elixir-${{ steps.beam-versions.outputs.elixir-versions }}-mix-deps-get-mix-lock-file-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Install mix dependencies
        if: steps.mix-deps-get-cache.outputs.cache-hit != 'true'
        run: mix deps.get

      - name: Restore mix dependency compilation cache
        id: mix-deps-compile-cache
        uses: actions/cache@v2
        with:
          path: _build
          key: cache-${{ env.cache-version }}-os-${{ runner.os }}-otp-${{ steps.beam-versions.outputs.otp-versions }}-elixir-${{ steps.beam-versions.outputs.elixir-versions }}-mix-deps-compile-mix-lock-file-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Compile mix dependencies
        if: steps.mix-deps-compile-cache.outputs.cache-hit != 'true'
        run: mix deps.compile

      - name: Restore mix typecheck cache
        id: mix-typecheck-cache
        uses: actions/cache@v2
        with:
          path: priv/plts
          key: cache-${{ env.cache-version }}-os-${{ runner.os }}-otp-${{ steps.beam-versions.outputs.otp-versions }}-elixir-${{ steps.beam-versions.outputs.elixir-versions }}-mix-typecheck

      - name: Setup typechecking
        if: steps.mix-typecheck-cache.outputs.cache-hit != 'true'
        run: mix typecheck.build-cache

      - name: Run typecheck tasks
        run: mix typecheck
