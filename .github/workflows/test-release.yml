name: Test Release

on:
  workflow_dispatch:
    inputs:
      release-version:
        description: Version to test releasing (no "v" prefix)
        required: true
        default: test

  pull_request:
    branches:
      - release

env:
  preferred-elixir: "1.14.x"
  preferred-otp: "25.x"
  default-release-version: "test-version-number"
  cache-version: 8
  commit-author-name: ${{ secrets.ACTIONS_COMMIT_AUTHOR_NAME }}
  commit-author-email: ${{ secrets.ACTIONS_COMMIT_AUTHOR_EMAIL }}
  MIX_ENV: test
  HEX_API_KEY: ${{ secrets.ACTIONS_HEX_API_KEY }}

concurrency:
  group: test-release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    name: Testing Before Release Dry-Run
    runs-on: ubuntu-latest

    continue-on-error: ${{ matrix.type == 'optional' }}
    strategy:
      matrix:
        elixir:
          - "1.12.x"
          - "1.13.x"
          - "1.14.x"
        otp:
          - "23.x"
          - "24.x"
        type: [required]
        include:
          # Additional version combinations we want to check
          # See: https://github.com/elixir-lang/elixir/blob/main/lib/elixir/pages/compatibility-and-deprecations.md#compatibility-between-elixir-and-erlangotp
          # Only Elixir > 1.12 supports OTP 25
          - elixir: "1.13.x"
            otp: "25.x"
            type: required
          - elixir: "1.14.x"
            otp: "25.x"
            type: required
          # Only Elixir < 1.14 supports OTP 22
          - elixir: "1.12.x"
            otp: "22.x"
            type: required
          - elixir: "1.13.x"
            otp: "22.x"
            type: required

    steps:
      - uses: actions/checkout@v2
        with:
          ref: release

      - name: Install erlang & Elixir
        id: beam-versions
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Restore mix dependency installation cache
        id: mix-deps-get-cache
        uses: actions/cache@v2
        with:
          path: deps
          key: cache-${{ env.cache-version }}-os-${{ runner.os }}-otp-${{ steps.beam-versions.outputs.otp-version }}-elixir-${{ steps.beam-versions.outputs.elixir-version }}-mix-deps-get-mix-lock-file-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Install mix dependencies
        if: steps.mix-deps-get-cache.outputs.cache-hit != 'true'
        run: mix deps.get

      - name: Restore mix dependency compilation cache
        id: mix-deps-compile-cache
        uses: actions/cache@v2
        with:
          path: _build
          key: cache-${{ env.cache-version }}-os-${{ runner.os }}-otp-${{ steps.beam-versions.outputs.otp-version }}-elixir-${{ steps.beam-versions.outputs.elixir-version }}-mix-deps-compile-mix-lock-file-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Compile mix dependencies
        if: steps.mix-deps-compile-cache.outputs.cache-hit != 'true'
        run: mix deps.compile

      - name: Run test suite
        run: mix test.suite

  types:
    name: Typechecking Before Release Dry-Run
    runs-on: ubuntu-latest

    continue-on-error: ${{ matrix.type == 'optional' }}
    strategy:
      matrix:
        elixir:
          - "1.12.x"
          - "1.13.x"
          - "1.14.x"
        otp:
          - "23.x"
          - "24.x"
        type: [required]
        include:
          # Additional version combinations we want to check
          # See: https://github.com/elixir-lang/elixir/blob/main/lib/elixir/pages/compatibility-and-deprecations.md#compatibility-between-elixir-and-erlangotp
          # Only Elixir > 1.12 supports OTP 25
          - elixir: "1.13.x"
            otp: "25.x"
            type: required
          - elixir: "1.14.x"
            otp: "25.x"
            type: required
          # Only Elixir < 1.14 supports OTP 22
          - elixir: "1.12.x"
            otp: "22.x"
            type: required
          - elixir: "1.13.x"
            otp: "22.x"
            type: required

    steps:
      - uses: actions/checkout@v2
        with:
          ref: release

      - name: Install erlang & Elixir
        id: beam-versions
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Restore mix dependency installation cache
        id: mix-deps-get-cache
        uses: actions/cache@v2
        with:
          path: deps
          key: cache-${{ env.cache-version }}-os-${{ runner.os }}-otp-${{ steps.beam-versions.outputs.otp-version }}-elixir-${{ steps.beam-versions.outputs.elixir-version }}-mix-deps-get-mix-lock-file-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Install mix dependencies
        if: steps.mix-deps-get-cache.outputs.cache-hit != 'true'
        run: mix deps.get

      - name: Restore mix dependency compilation cache
        id: mix-deps-compile-cache
        uses: actions/cache@v2
        with:
          path: _build
          key: cache-${{ env.cache-version }}-os-${{ runner.os }}-otp-${{ steps.beam-versions.outputs.otp-version }}-elixir-${{ steps.beam-versions.outputs.elixir-version }}-mix-deps-compile-mix-lock-file-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Compile mix dependencies
        if: steps.mix-deps-compile-cache.outputs.cache-hit != 'true'
        run: mix deps.compile

      - name: Restore mix typecheck cache
        id: mix-typecheck-cache
        uses: actions/cache@v2
        with:
          path: priv/plts
          key: cache-${{ env.cache-version }}-os-${{ runner.os }}-otp-${{ steps.beam-versions.outputs.otp-version }}-elixir-${{ steps.beam-versions.outputs.elixir-version }}-mix-typecheck

      - name: Setup typechecking
        if: steps.mix-typecheck-cache.outputs.cache-hit != 'true'
        run: mix typecheck.build-cache

      - name: Run typecheck tasks
        run: mix typecheck

  lints:
    name: Linting Before Release Dry-Run
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          ref: release

      - name: Install erlang & Elixir
        id: beam-versions
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.preferred-elixir }}
          otp-version: ${{ env.preferred-otp }}

      - name: Restore mix dependency installation cache
        id: mix-deps-get-cache
        uses: actions/cache@v2
        with:
          path: deps
          key: cache-${{ env.cache-version }}-os-${{ runner.os }}-${{ steps.beam-versions.outputs.otp-version }}-${{ steps.beam-versions.outputs.elixir-version }}-mix-deps-get-mix-lock-file-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Install mix dependencies
        if: steps.mix-deps-get-cache.outputs.cache-hit != 'true'
        run: mix deps.get

      - name: Restore mix dependency compilation cache
        id: mix-deps-compile-cache
        uses: actions/cache@v2
        with:
          path: _build
          key: cache-${{ env.cache-version }}-os-${{ runner.os }}-${{ steps.beam-versions.outputs.otp-version }}-${{ steps.beam-versions.outputs.elixir-version }}-mix-deps-compile-mix-lock-file-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Compile mix dependencies
        if: steps.mix-deps-compile-cache.outputs.cache-hit != 'true'
        run: mix deps.compile

      - name: Run linter tasks
        run: mix lint
        continue-on-error: true

  perform-release-dry-run:
    name: Test Releasing
    runs-on: ubuntu-latest

    needs:
      - tests
      - types
      - lints

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install erlang & Elixir
        id: beam-versions
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.preferred-elixir }}
          otp-version: ${{ env.preferred-otp }}

      - name: Restore Mix Cache
        id: mix-cache
        uses: actions/cache@v2
        with:
          path: deps
          key: cache-${{ env.cache-version }}-os-${{ runner.os }}-otp-${{ steps.beam-versions.outputs.otp-version }}-elixir-${{ steps.beam-versions.outputs.elixir-version }}-mix-mix-lock-file-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Setup dependencies
        if: steps.mix-cache.outputs.cache-hit != 'true'
        run: mix deps.get

      - name: Update version number
        run: |
          echo '${{ github.event.input.release-version || env.default-release-version }}' > VERSION
          cat VERSION

      - name: Preview new version commit
        run: |
          git config --global user.name "${{ env.commit-author-name }}"
          git config --global user.email "${{ env.commit-author-email }}"

          git commit -am "Release v$(cat VERSION)" --dry-run

      - name: Preview new version tags
        run: |
          echo "v$(cat VERSION)"
          echo stable

      - name: Preview publishing release to hex.pm
        run: |
          mix release --dry-run

  results:
    name: Test Matrix Results
    runs-on: ubuntu-latest

    if: ${{ always() }}
    needs:
      - tests
      - types
      - lints
      - perform-release-dry-run

    steps:
      - name: Test Suite Succeeded
        if: ${{ needs.tests.result == 'success' && needs.types.result == 'success' && needs.types.perform-release-dry-run == 'success' }}
        run: exit 0

      - name: Test Suite Failed
        if: ${{ needs.tests.result == 'failure' || needs.types.result == 'failure' || needs.types.perform-release-dry-run == 'failure' }}
        run: exit 1
